<!DOCTYPE html>
<html>
<head>
  <title>PoiMaps</title>
  <%= stylesheet_link_tag    "application", media: "all", "data-turbolinks-track" => true %>
  <%= javascript_include_tag "application", "data-turbolinks-track" => true %>
  <%= csrf_meta_tags %>

	<script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
	<script src="http://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>

    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
      html { height: 100% }
      body { height: 100%; margin: 0; padding: 0 }
      tr.over { background-color: grey}
      #map_canvas { height: 100% }
    </style>
    <script type="text/javascript"
      src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBwNVUZgov8CQrXbgaDf2wuEBVlnSXovs4&sensor=false&libraries=drawing,geometry">
    </script>
    <script type="text/javascript">
			var map;
			var infoWindow;
			var polygons = [];
			var overlay = new google.maps.OverlayView();
			
			function initialize() {
				//$("table#polygon_list").bind("mouseover")
			
				// inicialiamos el mapa
				initializeMap();
				
				// cargamos los registros existentes:
				loadBuildings();
			}
			
			function loadBuildings() {
				 
				$.ajax({
					type: "GET",
					url: '/welcome/index.json',
					success: function(data){
						// creamos un polígono por cada uno y lo dibujamos:
						$.each(data, function(index, value){
							var vertices = google.maps.geometry.encoding.decodePath(value.building.polygon) 
							var polygon = new google.maps.Polygon({
								path: vertices,
								strokeColor: "000000",
								strokeOpacity: 0.8,
								strokeWeight: 3,
								fillColor: "#FF0000",
								fillOpacity: 0.35,
								zIndex: 1,
								editable: true								
							});
							
							polygon.setMap(map);
							polygons.push(polygon);
						});
					}
				});
			}
			
			function initializeMap() {
				var myLatLng = new google.maps.LatLng(-33.498702,-70.612688);
				var mapOptions = {
					zoom: 16,
					center: myLatLng,
					mapTypeId: google.maps.MapTypeId.SATELLITE
				};

				map = new google.maps.Map(document.getElementById('map_canvas'),
						mapOptions);

				//drawingModes : [google.maps.drawing.OverlayType.MARKER] 
				var drawingManager = new google.maps.drawing.DrawingManager({
					drawingMode: google.maps.drawing.OverlayType.POLYGON,
					drawingControl: true,
					drawingControlOptions: {
						position: google.maps.ControlPosition.TOP_CENTER,
						drawingModes: [google.maps.drawing.OverlayType.POLYGON]
					},
					markerOptions: {
						icon: new google.maps.MarkerImage('http://www.example.com/icon.png')
					},
					circleOptions: {
						fillColor: '#ffff00',
						fillOpacity: 1,
						strokeWeight: 5,
						clickable: false,
						zIndex: 1,
						editable: true
					},
					polygonOptions: {
						strokeColor: "000000",
						strokeOpacity: 0.8,
						strokeWeight: 3,
						fillColor: "#FF0000",
						fillOpacity: 0.35,
						zIndex: 1,
						editable: true
					}
				});
				drawingManager.setMap(map);

				// Asociamos overlay y lo configuramos:
				overlay.setMap(map);
				
				overlay.draw = function () { 
						if (!this.ready) { 
								this.ready = true; 
								google.maps.event.trigger(this, 'ready'); 
						} 
				}; 

				google.maps.event.addListener(drawingManager, 'polygoncomplete', updateList); //showArrays);
				//google.maps.event.addListener(map, 'rightclick', deleteNode);

				infoWindow = new google.maps.InfoWindow();
			}
			
			/** @this {google.maps.Polygon} */
			function deleteNode(event)
			{
				// obtenemos los vértices del polígono:
				var path = this.getPath();

				// obtenemos punto en el cual se hizo click:
				var proj = map.getProjection();
				var clickPoint = proj.fromLatLngToPoint(event.latLng);
			
				var minDist = 512;
				var selectedIndex = -1;
				var nodeWidth = 6;
		
				// variables auxiliares:
				var nodeToDelete;
				var n = 0;
				var length = path.getLength();
		
				// Buscamos vértice más cercano:
				for(n = 0; n <= length-1; n=n+1) {
				
					var nodePoint = proj.fromLatLngToPoint(path.getAt(n));
					var dist = Math.sqrt(Math.pow(Math.abs(clickPoint.x - nodePoint.x),2) + Math.pow(Math.abs(clickPoint.y - nodePoint.y),2));
				
					if (dist < minDist) {
						minDist = dist;
						selectedIndex = n;
						
						//store point
						nodeToDelete = path.getAt(n);
					}
				}

				//check if we're clicking inside the node
		
				var ovProj = overlay.getProjection();
		
				var clickPx = overlay.getProjection().fromLatLngToContainerPixel(event.latLng);
				var nodePx = overlay.getProjection().fromLatLngToContainerPixel(nodeToDelete);
				var xDist = Math.abs(nodePx.x - clickPx.x);
				var yDist = Math.abs(nodePx.y - clickPx.y);
		
				if( xDist < nodeWidth && yDist < nodeWidth) {
					
					//chequeamos que tenga más de 3 puntos; en caso contrario, no dejamos que lo borre
					if(path.length > 3)
						path.removeAt(selectedIndex);
					else
						alert("Un polígono no puede contener menos de 3 vértices");
				}
				return false;			
			}

			/** event {google.maps.Polygon} */
			function updateList(event)
			{
				// lo subscribimos a deleteNode:
				google.maps.event.addListener(event, 'rightclick', deleteNode);
				
				// lo agregamos al arreglo de polygons:
				var id = polygons.length;
				polygons.push(event);
				
				// lo agregamos a la tabla:
				var name = "a";
				var lat = "lat";//event.latLng.lat();
				var lng = "lng";//event.latLng.lng();
				var link = "<a href='#' class='deletePolygon'>Borrar</a>";
				
				var html = "<tr data-id="+id+"><td>"+name+"</td><td>"+lat+"</td><td>"+lng+"</td><td>"+link+"</td></tr>";
				
				$("table#polygon_list").append(html);
				
				// vinculamos el click con mostrar detalles:
				$("table#polygon_list tr").live("click", showRow);
				
				// vinculamos la entrada en la tabla con el polígono:
				$("table#polygon_list tr").live("mouseenter", highlightPolygon);
				$("table#polygon_list tr").live("mouseleave", leavePolygon);
				// vinculamos link con borrar polígono:
				$("table#polygon_list tr a").live("click", deletePolygon);

				// subscribimos eventos equivalentes:
				google.maps.event.addListener(event, 'mouseover', enterPolygon);
				google.maps.event.addListener(event, 'mouseout', exitPolygon);
				
				// lo subscribimos a showArray:
				google.maps.event.addListener(event, 'click', showArrays);
			}
			
			function deletePolygon(event){
				event.preventDefault();
				
				// a -> td -> tr
				var $row = $(this).parent().parent();
				var id = $row.attr("data-id");
				
				polygon = polygons[id];
				
				polygon.setMap(null);
				polygons[id] = null;
				
				// borramos la fila en la tabla:
				$row.fadeOut(function() { 
					$(this).remove(); 
				});
				$("div#polygon_info").fadeOut(function() { 
					$(this).html("");
					$(this).fadeIn();
				});
			}
			
			function enterPolygon(event){
					this.setOptions({fillColor:"#fff"});
					showPolygon(this);	
			}
			function exitPolygon(event){
					this.setOptions({fillColor:null});
					$("div#polygon_info").html("");	
			}

			function highlightPolygon(event){
				var id = $(this).attr("data-id");
				
				if(id >= 0 && id < polygons.length && polygons[id]!=null){
					$(this).addClass("over");
					polygons[id].setOptions({fillColor:"#fff"});	
					showPolygon(polygons[id]);
				}
			}
			
			function leavePolygon(event){
				var id = $(this).attr("data-id");

				if(id >= 0 && id < polygons.length)	{
					$(this).removeClass("over");
					polygons[id].setOptions({fillColor:null});
					$("div#polygon_info").html("");				
				}
			}

			function showRow(event){
				// obtenemos id:
				var id = $(this).attr("data-id");
				
				// desplegamos información:
				showPolygon(polygons[id]);
			}
			
			/** this {google.maps.Polygon} */
			function showArrays(event) {
				showPolygon(this);
			}

			function showPolygon(polygon) {

				// Since this Polygon only has one path, we can call getPath()
				// to return the MVCArray of LatLngs
				var vertices = polygon.getPath();

				var contentString = '<b>Polygon Details</b><br>';
				//contentString += 'Clicked Location: <br>' + event.latLng.lat() + ',' + event.latLng.lng() + '<br>';

				// Iterate over the vertices.
				for (var i =0; i < vertices.getLength(); i++) {
					var xy = vertices.getAt(i);
					contentString += '<br>' + 'Coordinate: ' + i + '<br>' + xy.lat() +',' + xy.lng();
				}

				$("div#polygon_info").html(contentString);
				// Replace our Info Window's content and position
				//infoWindow.setContent(contentString);
				//infoWindow.setPosition(event.latLng);

				//infoWindow.open(map);
			}			
    </script>
</head>
<body onload="initialize()">

<%= yield %>

</body>
</html>
